<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Hi, I&#39;m Andi Sumbayak</title>
        <link>https://jauhariandi.github.io/posts/</link>
        <description>Recent content in Posts on Hi, I&#39;m Andi Sumbayak</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Mon, 15 Nov 2021 19:50:41 +0700</lastBuildDate>
        <atom:link href="https://jauhariandi.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Memulai Project Python Pada PyCharm Integrasi Dengan Vcs</title>
            <link>https://jauhariandi.github.io/posts/2021/11/memulai-project-python-pada-pycharm-integrasi-dengan-vcs/</link>
            <pubDate>Mon, 15 Nov 2021 19:50:41 +0700</pubDate>
            
            <guid>https://jauhariandi.github.io/posts/2021/11/memulai-project-python-pada-pycharm-integrasi-dengan-vcs/</guid>
            <description>Apa itu VCS (Version Control System) ? Menurut Atlassian, version control system (VCS) adalah sebuah kumpulan perangkat lunak yang sudah terintegrasi dan digunakan untuk membantu software engineer mengelola perubahan dalam source code dari waktu ke waktu.
VCS ini sangat penting terutama jika sebuah project software development dikerjakan oleh tim (lebih dari satu orang developer), dengan VCS ini masing-masing developer dapat melacak history perubahan code dari project yang mereka bangun yang dilakukan oleh developer lain dari tim mereka.</description>
            <content type="html"><![CDATA[<p><img src="/static/pc-github.png" alt="pc-github"></p>
<h3 id="apa-itu-vcs-version-control-system-">Apa itu VCS (Version Control System) ?</h3>
<p>Menurut <a href="https://www.atlassian.com/git/tutorials/what-is-version-control">Atlassian</a>, version control system (VCS) adalah sebuah kumpulan perangkat lunak yang sudah terintegrasi dan digunakan untuk membantu software engineer mengelola perubahan dalam source code dari waktu ke waktu.</p>
<p>VCS ini sangat penting terutama jika sebuah project software development dikerjakan oleh tim (lebih dari satu orang developer), dengan VCS ini masing-masing developer dapat melacak history perubahan code dari project yang mereka bangun yang dilakukan oleh developer lain dari tim mereka. Sehingga apabila terjadi kesalahan (error) pada code dapat dengan cepat ditemukan.</p>
<p>Saat ini salah satu software VCS yang paling banyak digunakan adalah git, dan github adalah salah satu platform web yang menyediakan tempat penyimpanan project software development dengan menggunakan software VCS git.</p>
<h3 id="step1-membuat-repository-di-github">Step1. Membuat Repository di Github</h3>
<ol>
<li><a href="https://github.com/login">Login</a> ke akun github anda.</li>
</ol>
<p><img src="/static/login-github.png" alt="login-github"></p>
<ol start="2">
<li>Setelah login buat repository baru.</li>
</ol>
<p><img src="/static/new-repo-github.png" alt="new-repo-github"></p>
<ol start="3">
<li>Set repository anda seperti ini.</li>
</ol>
<p><img src="/static/set-new-repo-github.png" alt="set-new-repo-github"></p>
<ol start="4">
<li>Create Repository.</li>
</ol>
<p>Sekarang repository untuk tempat menyimpan project python anda sudah berhasil dibuat.</p>
<h3 id="step2-clone-repository-github-ke-pycharm">Step2. Clone Repository Github ke PyCharm</h3>
<ol>
<li>Buka PyCharm, pada tab Projects pilih Get from VCS</li>
</ol>
<p><img src="/static/pycharm-new-from-vcs.png" alt="pycharm-new-from-vcs"></p>
<ol start="2">
<li>Buka repository github yang sudah dibuat, click pada bagian code kemudian copykan link (pilih HTTPS atau SSH)</li>
</ol>
<p><img src="/static/clone-repo-github.png" alt="clone-repo-github"></p>
<ol start="3">
<li>Pastekan link dari repository github yang sudah dicopy ke dalam PyCharm.</li>
</ol>
<p><img src="/static/clone-repo-pycharm.png" alt="clone-repo-pycharm"></p>
<ol start="4">
<li>Pilih Clone</li>
</ol>
<p>Repository github anda sudah berhasil diclone ke dalam PyCharm. Sekarang anda sudah bisa memulai project python di PyCharm untuk kemudian mengelolanya dengan dengan version control system git dari github.</p>
<p><img src="/static/pycharm-github.png" alt="pycharm-github"></p>
<p>Semoga bermanfaat.</p>
]]></content>
        </item>
        
        <item>
            <title>Instalasi PyCharm</title>
            <link>https://jauhariandi.github.io/posts/2021/11/instalasi-pycharm/</link>
            <pubDate>Sat, 13 Nov 2021 19:19:38 +0700</pubDate>
            
            <guid>https://jauhariandi.github.io/posts/2021/11/instalasi-pycharm/</guid>
            <description>Apa itu PyCharm ? PyCharm adalah sebuah IDE (Integrated Development Environment) yang dirancang khusus untuk programmer Python. PyCharm mengakomodasi semua kebutuhan tool essensial yang dibutuhkan oleh programmer Python untuk lebih produktif, seperti syntax highlight, compilasi code, tool database, navigasi project dan text editor programming.
Sebelum instalasi, berikut adalah system requirements (OS Windows) yang dibutuhkan oleh PyCharm untuk dapat berjalan optimal :
 64-bit versions of Microsoft Windows 10, 8 2 GB RAM minimum, 8 GB RAM recommended 2.</description>
            <content type="html"><![CDATA[<p><img src="/static/Pycharm.png" alt="Pycharm"></p>
<h2 id="apa-itu-pycharm-">Apa itu PyCharm ?</h2>
<p>PyCharm adalah sebuah IDE (Integrated Development Environment) yang dirancang khusus untuk programmer Python. PyCharm mengakomodasi semua kebutuhan tool essensial yang dibutuhkan oleh programmer Python untuk lebih produktif, seperti syntax highlight, compilasi code, tool database, navigasi project dan text editor programming.</p>
<p>Sebelum instalasi, berikut adalah system requirements (OS Windows) yang dibutuhkan oleh PyCharm untuk dapat berjalan optimal :</p>
<ul>
<li>64-bit versions of Microsoft Windows 10, 8</li>
<li>2 GB RAM minimum, 8 GB RAM recommended</li>
<li>2.5 GB hard disk space, SSD recommended</li>
<li>1024x768 minimum screen resolution</li>
<li>Python 2.7, or Python 3.5 or newer</li>
</ul>
<h2 id="dua-jenis-edisi-lisenses-pycharm">Dua Jenis Edisi (Lisenses) PyCharm</h2>
<p>Ada 2 jenis edisi (Lisensi) dari PyCharm yang dapat digunakan :</p>
<ol>
<li>
<p>Professional Edition</p>
<p>Adalah aplikasi versi berbayar dengan harga 199 US Dollar per user untuk tahun pertama.</p>
</li>
<li>
<p>Community Edition</p>
<p>Adalah aplikasi gratis yang bebas untuk digunakan dengan open source license.</p>
</li>
</ol>
<p>Untuk lebih jelas mengenai perbedaan keduanya bisa dilihat langsung di web resminya :</p>
<blockquote>
<p><a href="https://blog.jetbrains.com/pycharm/2017/09/pycharm-community-edition-and-professional-edition-explained-licenses-and-more/">Explained PyCharm Community and PyCharm Professional Edition</a></p>
</blockquote>
<h2 id="proses-instalasi-pycharm">Proses Instalasi PyCharm</h2>
<ol>
<li><a href="https://www.jetbrains.com/pycharm/download/">Download</a> PyCharm dari web resminya pilih yang Community Edition.</li>
<li>Double klik file exetucable (.exe) PyCharm yang sudah didownload untuk menjalankan instalasi.</li>
<li>Lakukan Instalasi sampai selesai</li>
</ol>
<p><img src="/static/1instalpycharm.png" alt="instalpycharm"></p>
<p>Tentukan directory tempat instalasi.</p>
<p><img src="/static/2instalpycharm.png" alt="instalpycharm"></p>
<p>Tambahkan Launcher ke dalam PATH</p>
<p><img src="/static/3instalpycharm.png" alt="instalpycharm"></p>
<p>Jalankan instalasi</p>
<p><img src="/static/4instalpycharm.png" alt="instalpycharm"></p>
<p>Proses Instalasi sedang berjalan, tunggu hingga selesai.</p>
<p><img src="/static/5instalpycharm.png" alt="instalpycharm"></p>
<p>Proses instalasi selesai.</p>
<p><img src="/static/6instalpycharm.png" alt="instalpycharm"></p>
<p>PyCharm sudah terinstal dengan sukses di komputer dan siap digunakan untuk kegiatan develop programming python anda.</p>
]]></content>
        </item>
        
        <item>
            <title>HUGO. Seri 2. Mengupload ke Github Pages</title>
            <link>https://jauhariandi.github.io/posts/2021/11/hugo.-seri-2.-mengupload-ke-github-pages/</link>
            <pubDate>Thu, 11 Nov 2021 21:24:36 +0700</pubDate>
            
            <guid>https://jauhariandi.github.io/posts/2021/11/hugo.-seri-2.-mengupload-ke-github-pages/</guid>
            <description>Introcution Github Pages Github Pages adalah hosting web static yang disediakan oleh Github, dimana tersedia 1 GB penyimpanan gratis serta dapat membangun web statis dari repository github secara langsung.
Pada seri ini, akan dijelaskan cara mengupload web statis Hugo ke repository github kemudian mengkasesnya memlalui Github Pages.
Step1. Membuat Repository di Github Web statis yang diupload ke repository github nantinya akan diakses dengan alamat https://username.github.io oleh karenanya kita akan membuat repository di github dengan nama username.</description>
            <content type="html"><![CDATA[<p><img src="/static/hugo+github.jpg" alt="hugo-github"></p>
<h2 id="introcution-github-pages">Introcution Github Pages</h2>
<p><a href="https://pages.github.com/"><strong>Github Pages</strong></a> adalah hosting web static yang disediakan oleh <a href="https://github.com/"><strong>Github</strong></a>, dimana tersedia 1 GB penyimpanan gratis serta dapat membangun web statis dari repository github secara langsung.</p>
<p>Pada seri ini, akan dijelaskan cara mengupload web statis Hugo ke repository github kemudian mengkasesnya memlalui Github Pages.</p>
<h2 id="step1-membuat-repository-di-github">Step1. Membuat Repository di Github</h2>
<p>Web statis yang diupload ke repository github nantinya akan diakses dengan alamat <code>https://username.github.io</code> oleh karenanya kita akan membuat repository di github dengan nama <code>username.github.io</code> dimana <code>username</code> adalah username dari akun github anda.</p>
<p>Login ke <a href="https://github.com">github</a> dengan akun anda, kemudian buat repository baru dengan nama <code>usernameanda.github.io</code>.</p>
<p><img src="/static/githudotio.png" alt="githubdotio"></p>
<p>Note : repository pada gambar di atas not available karena sudah ada pada github saya yakni untuk web blog statis yang sedang anda baca ini. Silahkan sesuaikan dengan username github anda.</p>
<h2 id="step2-update-file-configtoml">Step2. Update File <code>config.toml</code></h2>
<p>Sekarang update file <code>config.toml</code> yang ada pada web statis hugo anda, sesuaikan semua konfigurasi yang dibutuhkan.</p>
<p><img src="/static/configtoml.png" alt="configtoml"></p>
<p><code>baseURL = &quot;https://username.github.io/&quot;</code></p>
<h2 id="step3-generate-folder-public">Step3. Generate folder <code>public</code></h2>
<p>Selanjutnya kita generate folder <code>public</code> , folder ini akan berisikan file-file html, css, js yang nantinya akan kita upload ke repository github. Buka terminal pada direktori web statis hugo anda dan jalankan perintah <code>hugo</code></p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">E:<span style="color:#ae81ff">\h</span>ugo<span style="color:#ae81ff">\W</span>ebsiteku
? hugo
</code></pre></div><p>Anda dapat melihat isi dari folder public  seperti berikut</p>
<p><img src="/static/hugo_command.png" alt="hugo"></p>
<h2 id="step4-upload-ke-repository-github">Step4. Upload ke Repository Github</h2>
<p>Sekarang buka terminal pada folder <code>public</code> tadi dan jalankan perintah berikut</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">E:<span style="color:#ae81ff">\h</span>ugo<span style="color:#ae81ff">\W</span>ebsiteku<span style="color:#ae81ff">\p</span>ublic
? git init
? git add .
? git remote add origin https://github.com/jauhariandi/jauhariandi.github.io.git
? git commit -m <span style="color:#e6db74">&#34;first commit&#34;</span>
? git push origin master
</code></pre></div><p>Apabila berahsil maka, anda akan semua isi dari folder <code>public</code> sudah terupload ke repository github anda.</p>
<p><img src="/static/githubrepo.png" alt="githubrepo"></p>
<p>Selanjutnya selanjutnya klik menu setting kemudian pages, anda akan melihat bahwa web statis anda sudah terpublish dan sudah bisa dikases secara online.</p>
<p><img src="/static/githubpages.png" alt="githubpages"></p>
<p>Sekarang anda sudah bisa mengakses web statis hugo anda pada <code>github pages</code> , <em><strong>Congratulation.</strong></em></p>
<p>Semoga bermanfaat.</p>
]]></content>
        </item>
        
        <item>
            <title>HUGO. Seri 1. Membuat Web Statis dengan Hugo pada Komputer Lokal</title>
            <link>https://jauhariandi.github.io/posts/2021/11/hugo.-seri-1.-membuat-web-statis-dengan-hugo-pada-komputer-lokal/</link>
            <pubDate>Tue, 09 Nov 2021 21:05:20 +0700</pubDate>
            
            <guid>https://jauhariandi.github.io/posts/2021/11/hugo.-seri-1.-membuat-web-statis-dengan-hugo-pada-komputer-lokal/</guid>
            <description>Introduction Hugo Hugo adalah salah satu Site Static Generator (SSG) paling populer saat ini. Penggunaannya sangat sederhana, efesien dan mudah untuk dideploy. Instalasi, clone theme dari github ataupun dari official website Hugo, edit file configuration kemudian deploy selanjutnya web statis anda sudah jadi.
Di artikel ini akan dijelaskan how-to membangun web statis dengan hugo di komputer lokal.
Step1. Instalasi Instal Hugo
Buka terminal dan jalankan perintah berikut :
brew install hugo untuk memastikan proses instalasi berhasil jalan perintah berikut di terminal :</description>
            <content type="html"><![CDATA[<p><img src="/static/hugo.png" alt="Hugo"></p>
<h2 id="introduction-hugo">Introduction Hugo</h2>
<p>Hugo adalah salah satu Site Static Generator (SSG) paling populer saat ini. Penggunaannya sangat sederhana, efesien dan mudah untuk dideploy. Instalasi, clone theme dari github ataupun dari official website <a href="https://themes.gohugo.io/"><strong>Hugo</strong></a>, edit file configuration kemudian deploy selanjutnya web statis anda sudah jadi.</p>
<p>Di artikel ini akan dijelaskan how-to membangun web statis dengan hugo di komputer lokal.</p>
<h2 id="step1-instalasi">Step1. Instalasi</h2>
<p><strong>Instal Hugo</strong></p>
<p>Buka terminal dan jalankan perintah berikut :</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">brew install hugo
</code></pre></div><p>untuk memastikan proses instalasi berhasil jalan perintah berikut di terminal :</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">hugo version
</code></pre></div><p><strong>Instal Git</strong></p>
<p>Unduh file exe git di situs resminya <a href="https://git-scm.com/downloads"><strong>Git</strong></a>, sesuaikan dengan sistem operasi komputer anda. Jalankan instalasi git sampai selesai.</p>
<p>Buka terminal dan jalankan perintah berikut untuk memastikan apakah git sudah terinstal dengan benar.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">git --version
</code></pre></div><p>Setelah Hugo dan Git selesai diinstal kita lanjutkan ke langkah selanjutnya.</p>
<h2 id="step2-build-web-statis-dengan-hugo">Step2. Build Web Statis dengan Hugo</h2>
<p>Sekarang kita akan membangun web statis dengan hugo di komputer lokal terlebih dahulu.</p>
<p><strong>Set up the Site</strong></p>
<p>Tentukan folder yang akan dijadikan tempat menyimpan project website anda. Kemudian buka terminal pada pada folder tersebut dan jalankan perintah hugo untuk membuat site baru. Pada contoh ini saya akan menyimpannya di folder hugo dengan nama project Websiteku</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">E:<span style="color:#ae81ff">\h</span>ugo
? hugo new site Websiteku
</code></pre></div><p>dengan perintah di atas hugo menggenerate sebuah folder Websiteku dan semua folder dan file yg dibutuhkan untuk sebuah web statis.</p>
<p><img src="/static/new_site_hugo.png" alt="new site hugo"></p>
<p>Struktur folder yang digenerate oleh perintah hugo di atas bisa kita lihat seperti berikut :</p>
<p><img src="/static/struktur_web_hugo.png" alt="struktur_web_hugo"></p>
<p>Sekarang kita sudah berhasil membuat sebuah project web statis dengan hugo. Mari kita pelajari kegunaan dari masing-masing folder dan file pada struktur folder site statis hugo di atas. Di sini saya akan membahas beberapa yang penting menurut saya.</p>
<ul>
<li>
<p><strong>config.toml</strong> : ini adalah file tempat membuat semua konfigurasi website statis hugo. Anda dapat mempelajari dokumentasi lengkapnya di sini <a href="https://gohugo.io/getting-started/configuration/"><em>Configure Hugo</em></a></p>
</li>
<li>
<p><strong>content</strong> : Semua kontent dari website anda baik itu post, halaman akan disimpan di dalam folder ini.</p>
</li>
<li>
<p><strong>themes</strong> : theme yang digunakan oleh website statis anda akan disimpan di dalam folder ini.</p>
</li>
</ul>
<p>Baik, sekarang lanjutkan dengan memilih theme untuk project webiste hugo.</p>
<h2 id="memilih-dan-menginstal-theme">Memilih dan Menginstal Theme</h2>
<p>Hugo menyediakan banyak theme yang gratis maupun yang premium untuk kita gunakan. Anda dapat melihatnya di <a href="https://themes.gohugo.io/"><em>sini</em></a>. Untuk project ini saya menggunakan theme &ldquo;<a href="https://github.com/rhazdon/hugo-theme-hello-friend-ng"><em>hello-friend-ng</em></a>&rdquo;. Mari kita install theme.</p>
<p>Ada 2 cara untuk menginstal theme pada hugo :</p>
<ol>
<li>Dengan cara mendownload langsung theme kemudian letakkan di dalam folder theme pada project hugo.</li>
<li>Melakukan cloning dari repository theme di github ke dalam folder theme project hugo.</li>
</ol>
<p>Di sini saya menggunakan cara yang kedua.</p>
<p>Buka terminal pada folder project hugo kemudian jalan perintah git untuk melakukan cloning.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">E:<span style="color:#ae81ff">\h</span>ugo<span style="color:#ae81ff">\W</span>ebsiteku
? git clone https://github.com/rhazdon/hugo-theme-hello-friend-ng.git themes/hello-friend-ng
</code></pre></div><p>Setelah selesai cloning makan theme sudah tersedia di dalam project kita dan siap untuk kita gunakan.</p>
<p><img src="/static/cloning_theme.png" alt="cloning_theme"></p>
<p>Setelah theme diinstal selanjutnya kita konfigurai pada file configuration.toml supaya theme dapat digunakan. Hal ini dapat kita lakukan dengan mengganti carra mereplace file <em>config.toml</em> yang ada di dalam root folder <em>Websiteku</em> dengan file <em>config.toml</em> yang ada di dalam folder <em>themes/hello-friend-ng/exampleSite/</em>. Ini adalah file configurasi bawaan dari themenya.</p>
<p>Kita Lanjutkan dengan membuat content/post di project hugo.</p>
<h2 id="membuat-postkontent-di-hugo">Membuat post/kontent di Hugo</h2>
<p>Untuk membuat postingan di hugo adalah dengan menjalan perintah berikut pada direktori tempat porject hugo kita :</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">E:<span style="color:#ae81ff">\h</span>ugo<span style="color:#ae81ff">\W</span>ebsiteku
? hugo new post<span style="color:#ae81ff">\p</span>ost1.md
</code></pre></div><p>Penjelasan :</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">hugo new 
</code></pre></div><p>perintah untuk membuat post/konten di hugo</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">post<span style="color:#ae81ff">\p</span>ost1.md 
</code></pre></div><p><em>post</em> adalah folder tempat menyimpat content ini otomatis digenerate di dalam folder content dan <em>post1.md</em> adalah nama file kontent.</p>
<p>dengan perintah di atas kita sudah berhasil membuat kontent pada web hugo</p>
<p><img src="/static/post1.png" alt="post1"></p>
<p>Selanjutnya kita buka file <em>post1.md</em> dengan text editor seperti notepad dan edit bagian <em>draft</em> ubah nilainya menjadi <em>false</em> supaya menjadi publish saat website dijalankan, dan tambahkan teks sebagai isi dari kontent.</p>
<pre><code>---
title: &quot;Post1&quot;
date: 2021-11-10T21:50:30+07:00
draft: false
---

Ini Adalah Contoh Postingan di Hugo
</code></pre><p>Selanjutnya menjalankan server hugo supaya website bisa diakses. Jalankan perintah berikut pada terminal di direktori project hugo.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">E:<span style="color:#ae81ff">\h</span>ugo<span style="color:#ae81ff">\W</span>ebsiteku
? hugo server
</code></pre></div><p>hugo akan membuild website sesuai dengan konfigurasi pada file <em>config.toml</em> dan memberitahu website dapat diakses pada <em>http://localhost:1313/</em></p>
<p><img src="/static/hugo_server.png" alt="hugo_server"></p>
<p>Sekarang mari kita akses webiste kita pada browser</p>
<p><img src="/static/localhost_post1.png" alt="localhost_post1"></p>
<p><strong>Selamat,</strong> anda sudah berhasil membuat web statis dengan hugo pada komputer lokal.</p>
]]></content>
        </item>
        
    </channel>
</rss>
